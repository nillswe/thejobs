generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model jobs {
  id              Int               @id @default(autoincrement())
  title           String?
  company         String?
  description     String?
  duration        type?
  seniority       seniority?
  workplace       workplace?
  salaryMin       Decimal?          @db.Decimal
  salaryMax       Decimal?          @db.Decimal
  acceptedCountry accepted_country?
  createdAt       DateTime          @default(now()) @db.Timestamptz(6)
  userId          Int?
  owner           users?            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id        Int      @id @default(autoincrement())
  uid       String   @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String?
  name      String?
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  jobs      jobs[]
}

enum accepted_country {
  united_states @map("united-states")
  brazil
  argentina

  @@map("accepted-country")
}

enum seniority {
  entry_level @map("entry-level")
  mid_level   @map("mid-level")
  senior
  manager
}

enum type {
  full_time @map("full-time")
  part_time @map("part-time")
  contract
}

enum workplace {
  remote
  hybrid
  on_site @map("on-site")
}
